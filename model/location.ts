/**
 * OpenAlex
 * ![](https://raw.githubusercontent.com/ourresearch/openalex-docs/main/.gitbook/assets/OpenAlex-logo-5.png)  **OpenAlex** is a fully open catalog of the global research system.  It\'s named after the [ancient Library of Alexandria](https://en.wikipedia.org/wiki/Library_of_Alexandria) and made by the nonprofit [OurResearch](https://ourresearch.org/).  ## OpenAPI Specification  [Mearman/openalex-api-spec](https://github.com/Mearman/openalex-api-spec)  This OpenAPI specification is reverse-engineered and derived from spec generated by [openapi-devtools](https://github.com/AndrewWalsh/openapi-devtools).  The specification document itself is OpenAPI version 3.1 and is generated from TypeScript source code.  **[Releases](https://github.com/Mearman/openalex-api-spec/releases)**  ## Clients  ### Python  [![GitHub](https://img.shields.io/badge/GitHub-181717?style=for-the-badge&logo=GitHub&link=https://github.com/Mearman/openalex-python)](https://github.com/Mearman/openalex-python) [![CodeSpaces](https://img.shields.io/badge/CodeSpaces-181717?style=for-the-badge&logo=GitHub&link=https://codespaces.new/Mearman/openalex-python)](https://codespaces.new/Mearman/openalex-python) [![Colab](https://img.shields.io/badge/Colab-gray?style=for-the-badge&logo=Google%20Colab&link=https://colab.research.google.com/github/Mearman/openalex-python/blob/main/README.ipynb)](https://colab.research.google.com/github/Mearman/openalex-python/blob/main/README.ipynb)  ### Many more coming soon  ---
 *
 * The version of the OpenAPI document: 0.0.4-3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { LocationSource } from './locationSource';

export class Location {
    'isAccepted': any | null;
    'isOa': any | null;
    'isPublished': any | null;
    'landingPageUrl': any | null;
    'license'?: any | null;
    'pdfUrl'?: any | null;
    'source': LocationSource;
    'version': any | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "isAccepted",
            "baseName": "is_accepted",
            "type": "any"
        },
        {
            "name": "isOa",
            "baseName": "is_oa",
            "type": "any"
        },
        {
            "name": "isPublished",
            "baseName": "is_published",
            "type": "any"
        },
        {
            "name": "landingPageUrl",
            "baseName": "landing_page_url",
            "type": "any"
        },
        {
            "name": "license",
            "baseName": "license",
            "type": "any"
        },
        {
            "name": "pdfUrl",
            "baseName": "pdf_url",
            "type": "any"
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "LocationSource"
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "any"
        }    ];

    static getAttributeTypeMap() {
        return Location.attributeTypeMap;
    }
}

